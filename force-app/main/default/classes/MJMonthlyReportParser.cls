//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class MJMonthlyReportParser {

	public List<MonthlyReport> monthlyReport {get;set;} 

	public MJMonthlyReportParser(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'monthlyReport') {
						monthlyReport = arrayOfMonthlyReport(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'MJMonthlyReportParser consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class MonthlyReport {
		public String x_id {get;set;} // in json: _id
		public String FirmCode {get;set;} 
		public String month {get;set;} 
		public String subscriberId {get;set;} 
		public Integer count {get;set;} 
		public Integer getSuccess {get;set;} 
		public Integer postSuccess {get;set;} 
		public Integer getFail {get;set;} 
		public Integer postFail {get;set;} 

		public MonthlyReport(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == '_id') {
							x_id = parser.getText();
						} else if (text == 'FirmCode') {
							FirmCode = parser.getText();
						} else if (text == 'month') {
							month = parser.getText();
						} else if (text == 'subscriberId') {
							subscriberId = parser.getText();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'getSuccess') {
							getSuccess = parser.getIntegerValue();
						} else if (text == 'postSuccess') {
							postSuccess = parser.getIntegerValue();
						} else if (text == 'getFail') {
							getFail = parser.getIntegerValue();
						} else if (text == 'postFail') {
							postFail = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'MonthlyReport consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static MJMonthlyReportParser parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new MJMonthlyReportParser(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	


    private static List<MonthlyReport> arrayOfMonthlyReport(System.JSONParser p) {
        List<MonthlyReport> res = new List<MonthlyReport>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new MonthlyReport(p));
        }
        return res;
    }









}